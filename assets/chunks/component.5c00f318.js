import{o as f,u as h}from"./useDraggable.ed159e0a.js";import{f as v,s as V,j as d,x as S,g as C,y,z as O}from"../app.0c81e99c.js";const T=["onUpdate","onStart","onAdd","onRemove","animation","ghostClass","group","sort","disabled","store","handle","draggable","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","chosenClass","dragClass","ignore","filter","preventOnFilter","easing","setData","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","emptyInsertThreshold","scroll","forceAutoScrollFallback","scrollSensitivity","scrollSpeed","bubbleScroll","modelValue","tag","target"],c=["update","start","add","remove","choose","unchoose","end","sort","filter","clone","move","change"],A=v({name:"VueDraggable",model:{prop:"modelValue",event:"update:modelValue"},props:T,emits:["update:modelValue",...c],setup(t,{slots:l,emit:r,expose:u}){const i=V(),p=c.reduce((e,a)=>{const b=`on${a.replace(/^\S/,o=>o.toUpperCase())}`;return e[b]=o=>{r(a,o)},e},{}),g=d(()=>{const{modelValue:e,...a}=S(t);return{...f({...i,...a}),...p}}),m=d({get:()=>t.modelValue,set:e=>r("update:modelValue",e)}),s=C(),n=y(h(t.target||s,m,g));return u(n),()=>{if(l.default)return O(t.tag||"div",{ref:s},l.default(n))}}});export{A as V};
